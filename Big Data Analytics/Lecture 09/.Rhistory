Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,8,12
)
)
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.7)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
summary(lm.r)
new_data <- data.frame(Age = 4, Years_Exp = 5)
predicted_salaries <- predict(lm.r, newdata = new_data)
print(predicted_salaries)
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,612,16
)
)
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,12,16
)
)
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.7)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
summary(lm.r)
new_data <- data.frame(Age = 4, Years_Exp = 5)
predicted_salaries <- predict(lm.r, newdata = new_data)
print(predicted_salaries)
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
new_data <- data.frame(Age = 4, Years_Exp = 5)
predicted_salaries <- predict(lm.r, newdata = new_data)
print(predicted_salaries)
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Create the data frame
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,8,12
)
)
# Create the scatter plot
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
#install.packages('caTools')
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
#Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
# Visualising the Training set results
#install.packages('ggplot')
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages("ggplot2")
# Create the data frame
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,8,12
)
)
# Create the scatter plot
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
#install.packages('caTools')
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.70)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
#Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
# Visualising the Training set results
#install.packages('ggplot')
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages("ggplot2")
# Create the data frame
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,8,12
)
)
# Create the scatter plot
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
#install.packages('caTools')
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.90)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
#Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
# Visualising the Training set results
#install.packages('ggplot')
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages("ggplot2")
# Create the data frame
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,8,12
)
)
# Create the scatter plot
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
#install.packages('caTools')
library(caTools)
split = sample.split(data$Salary, SplitRatio = 1)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
#Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
# Visualising the Training set results
#install.packages('ggplot')
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages("ggplot2")
# Create the data frame
data <- data.frame(
Age=c(1,2,3,4
),
Years_Exp = c(4,5,8,2
),
Salary = c(1,6,8,12
)
)
# Create the scatter plot
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
#install.packages('caTools')
library(caTools)
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r= lm(formula = Salary ~ Age + Years_Exp,
data = trainingset)
#Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
# Visualising the Training set results
#install.packages('ggplot')
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Ex,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
install.packages("ggplot2")
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Ex,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() + geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = trainingset$Years_Exp,
y = trainingset$Salary), colour = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
# Create the data frame
data <- data.frame(
Age = c(1, 2, 3, 4),
Years_Exp = c(4, 5, 8, 2),
Salary = c(1, 6, 8, 12)
)
# Create the scatter plot
plot(data$Years_Exp, data$Salary,
xlab = "Years Experienced",
ylab = "Salary",
main = "Scatter Plot of Years Experienced vs Salary")
# Install and load the caTools package
# install.packages('caTools') # Uncomment if caTools is not installed
library(caTools)
# Split the data into training and test sets
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r = lm(formula = Salary ~ Age + Years_Exp, data = trainingset)
# Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
# Install and load the ggplot2 package
# install.packages("ggplot2") # Uncomment if ggplot2 is not installed
library(ggplot2)
# Visualizing the Training set results
ggplot(trainingset, aes(x = Years_Exp, y = Salary)) +
geom_point(color = 'red') +
geom_line(aes(y = predict(lm.r, newdata = trainingset)), color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualizing the Test set results
ggplot(testset, aes(x = Years_Exp, y = Salary)) +
geom_point(color = 'red') +
geom_line(aes(x = trainingset$Years_Exp,
y = predict(lm.r, newdata = trainingset)), color = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
# Create the data frame
data <- data.frame(
Age = c(1, 2, 3, 4),
Years_Exp = c(4, 5, 8, 2),
Salary = c(1, 6, 8, 12)
)
# Install and load the caTools package
# install.packages('caTools') # Uncomment if caTools is not installed
library(caTools)
# Split the data into training and test sets
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r = lm(formula = Salary ~ Age + Years_Exp, data = trainingset)
# Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 4, Years_Exp = 5)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
data <- data.frame(
Age = c(1, 2, 3, 4),
Years_Exp = c(4, 5, 8, 2),
Salary = c(1, 6, 8, 12)
)
print(data)
library(caTools)
# Split the data into training and test sets
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
lm.r = lm(formula = Salary ~ Age + Years_Exp, data = trainingset)
new_data <- data.frame(Age = 4, Years_Exp = 5)
predicted_salaries <- predict(lm.r, newdata = new_data)
print(predicted_salaries)
# Create the data frame
data <- data.frame(
Age = c(1, 2, 3, 4),
Years_Exp = c(4, 5, 8, 2),
Salary = c(1, 6, 8, 12)
)
print(data)
# Install and load the caTools package
# install.packages('caTools') # Uncomment if caTools is not installed
library(caTools)
# Split the data into training and test sets
split = sample.split(data$Salary, SplitRatio = 0.80)
trainingset = subset(data, split == TRUE)
testset = subset(data, split == FALSE)
summary(split)
# Fitting Simple Linear Regression to the Training set
lm.r = lm(formula = Salary ~ Age + Years_Exp, data = trainingset)
# Summary of the model
summary(lm.r)
# Create a data frame with new input values
new_data <- data.frame(Age = 1, Years_Exp = 4)
# Predict using the linear regression model
predicted_salaries <- predict(lm.r, newdata = new_data)
# Display the predicted salaries
print(predicted_salaries)
