data <- data.frame(
Study_Hours = c(29, 15, 33, 28, 39),
Pass_Fail = c(0, 0, 1, 1, 1)
)
model <- glm(Pass_Fail ~ Study_Hours, data = data, family = binomial)
new_data <- data.frame(Study_Hours = 33)
predicted_probability <- predict(model, newdata = new_data, type = "response")
print(predicted_probability)
coefficients <- coef(model)
beta_0 <- coefficients[1]
beta_1 <- coefficients[2]
required_hours <- (log(0.95 / 0.05) - beta_0) / beta_1
print(beta_0)
print(beta_1)
required_hours <- (log(0.95 / 0.05) - beta_0) / beta_1
print(required_hours)
library(ggplot2)
study_hours_seq <- seq(min(data$Study_Hours), max(data$Study_Hours), length.out = 100)
predicted_probabilities <- predict(model, newdata = data.frame(Study_Hours = study_hours_seq), type = "response")
plot_data <- data.frame(Study_Hours = study_hours_seq, Probability = predicted_probabilities)
ggplot(data, aes(x = Study_Hours, y = Pass_Fail)) +
geom_point() +
geom_line(data = plot_data, aes(x = Study_Hours, y = Probability), color = 'blue') +
labs(title = 'Logistic Regression Curve',
x = 'Study Hours',
y = 'Probability of Passing') +
theme_minimal()
data <- data.frame(
Study_Hours = c(29, 15, 33, 28, 39),
Pass_Fail = c(0, 0, 1, 1, 1)
)
model <- glm(Pass_Fail ~ Study_Hours, data = data, family = binomial)
new_data <- data.frame(Study_Hours = 19)
predicted_probability <- predict(model, newdata = new_data, type = "response")
print(predicted_probability)
data <- data.frame(
Study_Hours = c(29, 15, 33, 28, 39),
Pass_Fail = c(0, 0, 1, 1, 1)
)
model <- glm(Pass_Fail ~ Study_Hours, data = data, family = binomial)
new_data <- data.frame(Study_Hours = 33)
predicted_probability <- predict(model, newdata = new_data, type = "response")
print(predicted_probability)
coefficients <- coef(model)
beta_0 <- coefficients[1]
beta_1 <- coefficients[2]
print(beta_0)
print(beta_1)
required_hours <- (log(0.95 / 0.05) - beta_0) / beta_1
print(required_hours)
library(ggplot2)
study_hours_seq <- seq(min(data$Study_Hours), max(data$Study_Hours), length.out = 100)
# Predict the probabilities for the sequence
predicted_probabilities <- predict(model, newdata = data.frame(Study_Hours = study_hours_seq), type = "response")
# Create a dataframe for plotting
plot_data <- data.frame(Study_Hours = study_hours_seq, Probability = predicted_probabilities)
ggplot(data, aes(x = Study_Hours, y = Pass_Fail)) +
geom_point() +
geom_line(data = plot_data, aes(x = Study_Hours, y = Probability), color = 'blue') +
labs(title = 'Logistic Regression Curve',
x = 'Study Hours',
y = 'Probability of Passing') +
theme_minimal()
