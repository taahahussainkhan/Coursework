#include (Put Less than Angle bracket)stdio.h(Put Greater than Angle Bracket)
#include (Put Less than Angle bracket)netdb.h(Put Greater than Angle Bracket)
#include (Put Less than Angle bracket)sys/socket.h(Put Greater than Angle Bracket)
#include (Put Less than Angle bracket)sys/types.h(Put Greater than Angle Bracket)
#include (Put Less than Angle bracket)netinet/in.h(Put Greater than Angle Bracket)

/* Creates a datagram server. The port number is passed as an argument.This server runs forever */
void error(char *msg)
{
perror(msg);
exit(0);
}

int main(int argc, char *argv[])
{
int sock, length, fromlen, n;
struct sockaddr_in server;
struct sockaddr_in from;
char buf[1024];

if (argc (Put Less than Angle bracket) 2)
{
fprintf(stderr, "ERROR, no port provided\n");
exit(0);
}

sock=socket(AF_INET, SOCK_DGRAM, 0);
if (sock (Put Less than Angle bracket) 0)
{
error("Opening socket");
}
length = sizeof(server);
bzero(&server,length);
server.sin_family=AF_INET;
server.sin_addr.s_addr=INADDR_ANY;
server.sin_port=htons(atoi(argv[1]));
if (bind(sock,(struct sockaddr *)&server,length)(Put Less than Angle bracket)0)
{
error("binding");
}
fromlen = sizeof(struct sockaddr_in);
while (1)
{
n = recvfrom(sock,buf,1024,0,(struct sockaddr *)&from,&fromlen);
if (n (Put Less than Angle bracket) 0)
{
error("recvfrom");
}
write(1,"Received a datagram: ",21);
write(1,buf,n);
n = sendto(sock,"Got your message\n",17,0,(struct sockaddr *)&from,fromlen);
if (n (Put Less than Angle bracket) 0)
{
error("sendto");
}
}
}