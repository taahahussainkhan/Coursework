

///////////////////////////////// command ls | sort
#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <stdlib.h>
#include <wait.h>

	int main(int argc, char const *argv[])
	{
	int fd[2];
	pipe(fd);

	if(fork())
	{
	dup2(fd[0],0);
	close(fd[1]);

	execlp("sort","sort","-r", NULL);
	}
	else 
	{
	dup2(fd[1],1);
	close(fd[0]);

	execlp("ls","ls", NULL);
	}
	}


///////////////////////////sort | grep "parser"


/////////////////////////    ls / -R | | grep 'std' | more




#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <stdlib.h>
#include <wait.h>

	int main()
	{
		int fd1[2];
		int fd2[2];

		pipe(fd1);
		pipe(fd2);

		if(fork()==0)
		{
			close (fd2[0]);
			close (fd2[1]);
			close (fd1[0]);

			dup2(fd1[1],1);
			execlp("ls", "ls", "/", "-R", NULL );
		}
		else
		{
			if(fork()==1)
			{
				close(fd1[1]);
				close(fd2[0]);

				dup2(fd1[0],0);
				dup2(fd2[1],1);

				execlp("grep", "grep", "std", NULL);
			}
			else
			{
				if(fork()==0)
				{
				close(fd1[0]);
				close(fd1[1]);
				close(fd2[1]);
				
				dup2(fd2[0],0);
				execlp("more","more", NULL);
				}
				else
				{
				close(fd1[0]);
				close(fd1[1]);
				close(fd2[1]);
				close(fd2[0]);
				
				wait(NULL);
				}
				
			}
		}

	}